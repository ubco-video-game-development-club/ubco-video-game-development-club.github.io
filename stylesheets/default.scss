---
# Required for Jekyll to detect this file
---

@font-face {
  font-family: vgdc-title;
  src: url(/assets/fonts/lemonmilk_regular.otf);
}

.header-box {
  margin: 0 10%;
}

.main-box {
  padding: 20px;
  background-color: #212426;
  border: 2px solid #323a40;
  border-radius: 4px;
}

.body-2col-parent {
  display: flex;
}

.body-2col-child {
  flex: 50%;
  padding: 40px;
}

.body-2col-child img {
  max-width: 100%;
  border: 2px solid #323a40;
  border-radius: 4px;
}

.body-2col-child p {
  margin: 10px 0 40px 0;
}

.game-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  grid-auto-rows: 275px;
  place-items: center;
  flex-wrap: wrap;
  justify-content: space-evenly;
  margin: 0 40px;
}

.game-box {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 400px;
  height: 225px;
  transition: 0.3s;
}

.game-box:hover {
  width: 410px;
  height: 235px;
}

.game-body {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  // margin: 30px;
  border: 3px solid #616264;
  box-shadow: 3px 3px #323a40;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  text-align: center;
  cursor: pointer;
}

.game-title {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100%;
  height: 20%;
  font-size: 1.6vmin;
  background-color: #323a40bf;
}

.game-desc {
  width: 100%;
  height: 80%;
  padding: 10px 0;
  font-size: 12px;
  color: #00000000;
  transition: 0.3s;
}
.game-desc:hover {
  background-color: #323a4091;
  color: white;
}

.game-body h2 {
  margin: 0 20px;
  font-family: vgdc-title;
  letter-spacing: 5px;
  color: #2e9fe0;
}

.game-body h4 {
  height: 80%;
  margin: 0 20px;
  font-family: 'Open Sans', sans-serif;
  font-size: 16px;
  letter-spacing: normal;
}

.game-links {
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  height: 20%;
  margin: 0 20px;
}

.game-links img {
  margin-left: 10px;
}

.game-links img:hover {
  background-color: #2e9fe0;
  border: solid 2px #1b7eb8;
  border-radius: 20px;
}

.exec-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-auto-rows: 280px;
  place-items: center;
  flex-wrap: wrap;
  justify-content: space-evenly;
  margin: 40px 40px;
}

.exec-box {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  width: 200px;
  height: 280px;
}

.exec-img {
  border: 3px solid #616264;
  box-shadow: 3px 3px #323a40;
  width: 180px;
  height: 180px;
}

.exec-name {
  margin: 16px 0 0;
  font-size: 24px;
  text-align: center;
}

.exec-position {
  margin: 4px 0 0;
  font-size: 18px;
  text-align: center;
}

a {
  color: #2e9fe0;
  transition: 0.3s;
}

a:hover {
  color: #80d0ff;
}

body {
  margin: 0;
  font-family: vgdc-title;
  font-size: 20px;
  letter-spacing: 10px;
  color: white;
  background-color: #444a4f;
}

.events-list {
  display: flex;
  flex-direction: column;
  align-items: center;
}

div.event {
  background-color: #323a40;
  border-radius: 4px;
  margin: 1em;
  width: 100%;
  max-width: 50em;
  padding: 0.5em;
  transition: 0.3s;
  text-align: left;
  border: 2px solid #444a4f;
}

div.event:hover {
  margin: 1em 0.5em;
  max-width: 51em;
}

div.event p {
  margin: 0.5em;
}

div.event b {
  margin: 0.4em;
}

.socials {
  margin: 10px 0;
  padding: 2px;
  background-color: #323a40;
  border-radius: 4px;
}

.social-icon {
  text-decoration: none;
  line-height: 0;
}

.social-icon img {
  margin: 16px;
}

p {
  margin: 40px;
  font-family: 'Open Sans', sans-serif;
  font-size: 16px;
  letter-spacing: normal;
  text-align: left;
  color: #e6e6e6;
}

.title {
  margin: 80px 40px;
  letter-spacing: 6px;
}

.subtitle {
  margin: 40px 0px;
  text-align: center;
  letter-spacing: 6px;
}

.centered {
  text-align: center;
}

.inline-link {
  display: inline;
  color: white;
  text-decoration: underline;
}

.divider {
  width: 100%;
  border-bottom: solid 2px #2e9fe0;
  border-radius: 1px;
}

#gravity-box {
  position: absolute;
  top: 80px;
  bottom: 0%;
  left: 0%;
  right: 0%;
  border: none;
  width: 100vw;
  height: calc(100vh - 80px);
  filter: blur(4px) opacity(100%);
}

#ubco-box {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: calc(20% + 80px);
  bottom: 60%;
  left: 10%;
  right: 30%;
  pointer-events: none;
}

#vgdc-box {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: calc(60% + 80px);
  bottom: 20%;
  left: 30%;
  right: 10%;
  pointer-events: none;
}

#ubcovgdc-text {
  text-align: center;
  font-size: 14px;
  color: #bfc0c2;
  letter-spacing: 10px;
  pointer-events: none;
}

#venivigidici-box {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: calc(40% + 80px);
  bottom: 40%;
  left: 0%;
  right: 0%;
  pointer-events: none;
}

#venivigidici-text {
  text-align: center;
  font-size: 64px;
  color: #323a40;
  letter-spacing: 30px;
  pointer-events: none;
}

nav {
  display: flex;
  align-items: center;
  height: 80px;
  background-color: #323a40bf;
}

nav a {
  color: white;
  text-decoration: none;
  width: 20%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

nav a:hover {
  color: #1b7eb8;
}

nav a.active {
  color: #2e9fe0;
  border-bottom: solid 3px #2e9fe0;
  border-radius: 5px;
}

// Glitch Animation by Isaac Doud: https://codepen.io/cipherbeta/pen/YLdVjw

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin glitch2Copy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
for more information on how to random skew. */
  // animation: glitch-skew 1s infinite linear alternate-reverse;

  // Creates a copy before our text.
  &::before {
    // Duplicates our text with the mixin.
    @include glitchCopy;
    // Scoots text slightly to the left for the color offset.
    left: 2px;
    // Creates the color 'shadow' that happens on the glitch.
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  // Creates a copy after our text. Note comments from ::before.
  &::after {
    @include glitchCopy;
    left: -4px;
    text-shadow: -4px 0 #00fff9, 4px 4px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse;
  }
}

.glitch2 {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
for more information on how to random skew. */
  // animation: glitch-skew 1s infinite linear alternate-reverse;

  // Creates a copy before our text.
  &::before {
    // Duplicates our text with the mixin.
    @include glitch2Copy;
    // Scoots text slightly to the left for the color offset.
    left: 1px;
    // Creates the color 'shadow' that happens on the glitch.
    text-shadow: -1px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
    animation: glitch2-anim 5s infinite linear alternate-reverse;
  }

  // Creates a copy after our text. Note comments from ::before.
  &::after {
    @include glitch2Copy;
    left: -1px;
    text-shadow: -1px 0 #00fff9, 1px 1px #ff00c1;
    animation: glitch2-anim2 1s infinite linear alternate-reverse;
  }
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      // transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      // transform: skew((random(100) / 100) + deg);
    }
  }
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch2-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      // transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch2-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      // transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}
